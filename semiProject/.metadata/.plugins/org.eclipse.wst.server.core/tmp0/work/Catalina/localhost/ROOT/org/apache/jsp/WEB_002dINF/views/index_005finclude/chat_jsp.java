/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.5
 * Generated at: 2020-09-07 05:40:22 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.index_005finclude;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class chat_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>웹 채팅</title>\r\n");
      out.write("<script src=\"http://code.jquery.com/jquery-3.1.1.min.js\"></script>\r\n");
      out.write("<style>\r\n");
      out.write("\r\n");
      out.write("/* pc 화면 */\r\n");
      out.write("@media ( min-width : 768px) {\r\n");
      out.write("\t#kakao-talk-channel-chat-button {\r\n");
      out.write("\t\tposition: fixed;\r\n");
      out.write("\t\tz-index: 999;\r\n");
      out.write("\t\tright: 30px; /* 화면 오른쪽으로부터의 거리 */\r\n");
      out.write("\t\tbottom: 30px; /* 화면 아래쪽으로부터의 거리 */\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("/* 모바일 화면 */\r\n");
      out.write("@media ( max-width :767px) {\r\n");
      out.write("\t#kakao-talk-channel-chat-button {\r\n");
      out.write("\t\tposition: fixed;\r\n");
      out.write("\t\tz-index: 999;\r\n");
      out.write("\t\tright: 15px; /* 화면 오른쪽으로부터의 거리 */\r\n");
      out.write("\t\tbottom: 30px; /* 화면 아래쪽으로부터의 거리 */\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div id=\"kakao-talk-channel-chat-button\"></div>\r\n");
      out.write("\r\n");
      out.write("\t<script src=\"//developers.kakao.com/sdk/js/kakao.min.js\"></script>\r\n");
      out.write("\t<script type='text/javascript'>\r\n");
      out.write("\t\t//<![CDATA[\r\n");
      out.write("\t\t// 사용할 앱의 JavaScript 키를 설정해 주세요.\r\n");
      out.write("\t\tKakao.init('aacaaee5557fae296d0b02d4427c1830');\r\n");
      out.write("\t\t// 카카오톡 채널 1:1채팅 버튼을 생성합니다.\r\n");
      out.write("\t\tKakao.Channel.createChatButton({\r\n");
      out.write("\t\t\tcontainer : '#kakao-talk-channel-chat-button',\r\n");
      out.write("\t\t\tchannelPublicId : '_bSjgxb' // 카카오톡 채널 홈 URL에 명시된 id로 설정합니다.\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t//]]>\r\n");
      out.write("\t</script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
