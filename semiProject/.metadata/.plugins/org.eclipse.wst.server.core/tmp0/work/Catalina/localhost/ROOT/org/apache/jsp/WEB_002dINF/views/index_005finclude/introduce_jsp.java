/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.5
 * Generated at: 2020-09-07 05:41:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.index_005finclude;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class introduce_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("   <meta charset=\"UTF-8\">\r\n");
      out.write("   <title>INTRODUCE</title>\r\n");
      out.write("   <script src=\"http://code.jquery.com/jquery-1.9.1.js\"></script>\r\n");
      out.write("<style>\r\n");
      out.write(" @font-face {\r\n");
      out.write("    font-family: 'yg-jalnan';\r\n");
      out.write("    src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_four@1.2/JalnanOTF00.woff') format('woff');\r\n");
      out.write("    font-weight: normal;\r\n");
      out.write("    font-style: normal;\r\n");
      out.write("}\r\n");
      out.write("* {\r\n");
      out.write("   font-family: '@여기어때 잘난체'\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#page {\r\n");
      out.write("   background: white;\r\n");
      out.write("   margin: 15px;\r\n");
      out.write("   padding-bottom:30px;\r\n");
      out.write("   height: hidden;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#content {\r\n");
      out.write("   margin-top: none;\r\n");
      out.write("   margin-left: 70px;\r\n");
      out.write("   margin-right: 70px;\r\n");
      out.write("   padding: 30px margin-top: 10px;\r\n");
      out.write("   text-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".title {\r\n");
      out.write("   font-size: 50px;\r\n");
      out.write("   text-align: center;\r\n");
      out.write("   margin: auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#map {\r\n");
      out.write("   width: 80%;\r\n");
      out.write("   height: 600px;\r\n");
      out.write("   margin: auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".text{\r\n");
      out.write("   text-align: center;\r\n");
      out.write("   margin-top:50px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "menu.jsp", out, false);
      out.write("\r\n");
      out.write("   <div id=\"page\">\r\n");
      out.write("      ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "header.jsp", out, false);
      out.write("\r\n");
      out.write("      <div class=\"title\">⊙ INTRODUCE ⊙</div>\r\n");
      out.write("      <br> <br>\r\n");
      out.write("      <div id=\"map\"></div>\r\n");
      out.write("\r\n");
      out.write("      <script type=\"text/javascript\" src=\"//dapi.kakao.com/v2/maps/sdk.js?appkey=2d06e7f6c04a5b6cff4d94cebfef1694\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("var mapContainer = document.getElementById('map'), // 지도를 표시할 div \r\n");
      out.write("    mapOption = { \r\n");
      out.write("        center: new kakao.maps.LatLng(37.438754, 126.675112), // 지도의 중심좌표\r\n");
      out.write("        level: 4 // 지도의 확대 레벨\r\n");
      out.write("    };\r\n");
      out.write("\r\n");
      out.write("var map = new kakao.maps.Map(mapContainer, mapOption); // 지도를 생성합니다\r\n");
      out.write("\r\n");
      out.write("var imageSrc = '../display?fileName=gif77.gif', // 마커이미지의 주소입니다    \r\n");
      out.write("    imageSize = new kakao.maps.Size(50, 40), // 마커이미지의 크기입니다\r\n");
      out.write("    imageOption = {offset: new kakao.maps.Point(27, 69)}; // 마커이미지의 옵션입니다. 마커의 좌표와 일치시킬 이미지 안에서의 좌표를 설정합니다.\r\n");
      out.write("      \r\n");
      out.write("// 마커의 이미지정보를 가지고 있는 마커이미지를 생성합니다\r\n");
      out.write("var markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize, imageOption),\r\n");
      out.write("    markerPosition = new kakao.maps.LatLng(37.438754, 126.675112); // 마커가 표시될 위치입니다\r\n");
      out.write("\r\n");
      out.write("// 마커를 생성합니다\r\n");
      out.write("var marker = new kakao.maps.Marker({\r\n");
      out.write("    position: markerPosition, \r\n");
      out.write("    image: markerImage // 마커이미지 설정 \r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("// 마커가 지도 위에 표시되도록 설정합니다\r\n");
      out.write("marker.setMap(map);  \r\n");
      out.write("\r\n");
      out.write("var iwContent = '<div style=\"padding:5px;\">방울방울 스튜디오 <br><a href=\"https://map.kakao.com/link/map/방울방울%20스튜디오,37.438754, 126.675112\" style=\"color:blue\" target=\"_blank\">큰지도보기</a> <a href=\"https://map.kakao.com/link/to/방울방울%20스튜디오,37.438754, 126.675112\" style=\"color:blue\" target=\"_blank\">길찾기</a></div>', \r\n");
      out.write("iwPosition = new kakao.maps.LatLng(37.438754, 126.675112); //인포윈도우 표시 위치입니다\r\n");
      out.write("\r\n");
      out.write("//인포윈도우를 생성합니다\r\n");
      out.write("var infowindow = new kakao.maps.InfoWindow({\r\n");
      out.write("position : iwPosition, \r\n");
      out.write("content : iwContent \r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("//마커 위에 인포윈도우를 표시합니다. 두번째 파라미터인 marker를 넣어주지 않으면 지도 위에 표시됩니다\r\n");
      out.write("infowindow.open(map, marker); \r\n");
      out.write("</script>\r\n");
      out.write("      <div class=\"text\">\r\n");
      out.write("         인천 미추홀구 매소홀로 488번길 6-32 태승빌딩 5층<br><br>(지번) 학익동 663-1<br><br>032-876-3332\r\n");
      out.write("      </div>\r\n");
      out.write("   </div>\r\n");
      out.write("   ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "chat.jsp", out, false);
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
